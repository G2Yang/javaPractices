/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cat.proven.guiprod.view;

import cat.proven.guiprod.model.User;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author dax
 */
public class MainFramee extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFramee() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        userPanel1 = new cat.proven.guiprod.view.UserPanel();
        activityFilterPanel1 = new cat.proven.guiprod.view.ActivityFilterPanel();
        ageFilterPanel1 = new cat.proven.guiprod.view.AgeFilterPanel();
        jMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        exit = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        filterByActivity = new javax.swing.JMenuItem();
        filterByAgeRange = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutUs = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().add(userPanel1, java.awt.BorderLayout.CENTER);
        getContentPane().add(activityFilterPanel1, java.awt.BorderLayout.NORTH);
        getContentPane().add(ageFilterPanel1, java.awt.BorderLayout.NORTH);

        fileMenu.setText("File");

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        fileMenu.add(exit);

        jMenuBar.add(fileMenu);

        editMenu.setText("Edit");

        filterByActivity.setText("filterByActivity");
        filterByActivity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handlerMenu(evt);
            }
        });
        editMenu.add(filterByActivity);

        filterByAgeRange.setText("filterByAgeRange");
        filterByAgeRange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handlerMenu(evt);
            }
        });
        editMenu.add(filterByAgeRange);

        jMenuBar.add(editMenu);

        helpMenu.setText("helpMenu");

        aboutUs.setText("AboutUs");
        aboutUs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handlerMenu(evt);
            }
        });
        helpMenu.add(aboutUs);

        jMenuBar.add(helpMenu);

        setJMenuBar(jMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        int answer = JOptionPane.showConfirmDialog(this, "Sure?", "Exit application", JOptionPane.OK_CANCEL_OPTION);
        if (answer == JOptionPane.OK_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitActionPerformed

    private void handlerMenu(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handlerMenu
        String action = evt.getActionCommand();

        if (action != null) {
            switch (action) {
                case "filterByActivity":
                    displayFilterByActivity();
                    break;
                case "AboutUs":
                    displayAbout();
                    break;
                case "filterByAgeRange":
                    displayFilterAge();
                    break;

            }
        }
    }//GEN-LAST:event_handlerMenu

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFramee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFramee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFramee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFramee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFramee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutUs;
    private cat.proven.guiprod.view.ActivityFilterPanel activityFilterPanel1;
    private cat.proven.guiprod.view.AgeFilterPanel ageFilterPanel1;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem filterByActivity;
    private javax.swing.JMenuItem filterByAgeRange;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar;
    private cat.proven.guiprod.view.UserPanel userPanel1;
    // End of variables declaration//GEN-END:variables

    private void displayFilterByActivity() {
        JPanel contenedor = new JPanel();
        contenedor.add(activityFilterPanel1);
        contenedor.add(userPanel1);
        
        List<User> usr = this.activityFilterPanel1.filter();
        this.userPanel1.putData(usr);
        
        setContentPane(contenedor);
        validate();
    }

    private void displayAbout() {
        String aboutMessage = "Hecho por Yisus";
        JOptionPane.showMessageDialog(this, aboutMessage, "About", JOptionPane.INFORMATION_MESSAGE);
    }

    private void displayFilterAge() {
        JPanel contenedor = new JPanel();
        contenedor.add(ageFilterPanel1);
        contenedor.add(userPanel1);
        setContentPane(contenedor);
        validate();
    }
}
